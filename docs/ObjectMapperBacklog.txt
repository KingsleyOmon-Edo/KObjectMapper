MVP
----
- Simple Object-to-object mapping
	- Similar types 
	- Dissimilar types
- Simple collection mapping
	- Collections of similar types
	- Collection of dissimilar types

- Good unit test coverage
- Documentation
- Code samples and examples


PENDING FEATURES
-------------------
- Review code and fix any issues in files.
- Review and cover ALL object extension methods with protective tests.
9 - Mapping collections

- REFACTOR: Push some of ObjectExtension methods into a service class and consume by object composition.
- so they don't show up ON all objects globally.

- Mapping between collections of dissimilar types

- Test guard clauses
- Keep Extensions local
- Should return the mapped instance instead
	var target = mapper.Map<T>(source);
	var target = mapper.MapFrom<T>(source)
	var target = mapper.MapFrom(source);
- Review the semantics of the MapTo<T>() and MapFrom<T>() methods
- Mapping collections

- Mapping collections

COMPLETED FEATURES
-------------------
- POC: Basic mapping between two objects of same type. --- DONE
- Test strongly types mapping --- DONE
- Altenative signatures
	1 - MapTo<T>(T target)	--- DONE
	2 - MapFrom<T>(T source) --- DONE
	3 - Map(object source, object Target) --- DONE
	4 - MapTo(object source, object target) --- DONE
	5 - MapFrom(object source) --- DONE
	6 - Surface MapTo<T> and MapFrom<T> methods to any arbitray object via extension method for the generic variants --- DONE

- Map between two objects of dissimilar types.
- MapTo(), MapFrom()
- Surface Map methods to any arbitray object via extension methods
- Refactoring: Group funtionally related test methods together refactor to separate classes
- Separate MapToOfT from the lot into their own class
- Remove extra fluff

COMPLETED TASKS
---------------
//  TODO: Test predicate function guard clauses.
//  private static bool ArePropValuesDifferent<T>(T sourceObject, PropertyInfo sourceProp, T targetObject, PropertyInfo targetProp)
//  Test when sourceProp is null (DONE)
//  Test when targetProp is null (DONE)
//  Test when sourceProp.Name is not equal to targetProp.Name (DONE)
//  Test when sourcePropType is not equal to targetPropType (DONE)        
//  Test when source object is null (DONe)
//  Test when target object is null (DONE)
//  TODO: Isolate predicate function for reuse. (DONE)