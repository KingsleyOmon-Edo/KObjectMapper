PENDING FEATURES
-------------------
9 - Mapping collections

2 - Data integrity Tests
	Identify the new nethods and for each:
	a) Happy paths 
	b) Sad paths
	b) Edge cases
	c) Where applicable test the types of supplied arguments

 //  Map<T> Tests
    //  -------------
    //  Null source should throw
    //  Null target should throw
    //  If source not of type T throw
    //  If target not of the common expected type T throw.
    //  


3 - Test new method
	Remember to cover the newly extracted methods with enough tests.
	- WriteProperties
	- ApplyDiffs
	- Any other dangling method with little or zero code coverage

3 - Test guard clauses
6 - Keep Extensions local
7 - Should return the mapped instance instead
	var target = mapper.Map<T>(source);
	var target = mapper.MapFrom<T>(source)
	var target = mapper.MapFrom(source);
8 - Review the semantics of the MapTo<T>() and MapFrom<T>() methods
9 - Mapping collections



COMPLETED FEATURES
-------------------
1 - POC: Basic mapping between two objects of same type. --- DONE
2 - Test strongly types mapping --- DONE
3 - Altenative signatures
	1 - MapTo<T>(T target)	--- DONE
	2 - MapFrom<T>(T source) --- DONE
	3 - Map(object source, object Target) --- DONE
	4 - MapTo(object source, object target) --- DONE
	5 - MapFrom(object source) --- DONE
	6 - Surface MapTo<T> and MapFrom<T> methods to any arbitray object via extension method for the generic variants --- DONE

4 - Map between two objects of dissimilar types.
5 - MapTo(), MapFrom()
6 - Surface Map methods to any arbitray object via extension methods
7 - Refactoring: Group funtionally related test methods together refactor to separate classes
8 - Separate MapToOfT from the lot into their own class