## This workflow will build a .NET project ...
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
#
#name: Upload dotnet package
#
#on:
#  push:
#    branches: [ "main","dev","test-packages/*" ]
#  pull_request:
#    branches: [ "main","dev","test-packages/*" ]
#  release:
#    types: [ created ]
#
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#    permissions:
#      packages: write
#      contents: read
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-dotnet@v3
#        with:
#          dotnet-version: '6.0.x' # SDK Version to use.
#          source-url: https://nuget.pkg.github.com/KingsleyOmon-Edo/index.json
#        env:
#          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
#      
#      # Build
#      - run: dotnet build --configuration Release src/ObjectMapper/ObjectMapper.csproj
#      
#      # Package
#      - name: Creating Object Mapper Nuget package ...
#        run: dotnet pack -c Release src/ObjectMapper/ObjectMapper.csproj
#      
#      # Publish (GPR)
#      - name: Publishing the ObjectMapper package to GitHub Packages Registry (GPR) ...
#        env:
#          NUGET_AUTH_TOKEN: ${{ secrets.B49ED4045422444FAF4CA36C41F2A373 }}
#        run: dotnet nuget push src/ObjectMapper/bin/Release/*.nupkg --api-key $NUGET_AUTH_TOKEN
#
#      # Publish (nuget.org)
#      - name: Publish the package to nuget.org
#        env:
#          NUGET_AUTH_TOKEN: ${{ secrets.NG_DF0D5A672ABA4BD69DB2929F0CE94A56 }}
#        run: dotnet nuget push src/ObjectMapper/bin/Release/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
