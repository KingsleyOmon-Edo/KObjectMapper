## This workflow will build a .NET project ...
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
#
name: Upload dotnet package

on:
  push:
    branches: ["main", "dev", "test-packages/*"]
  pull_request:
    branches: ["main", "dev", "test-packages/*"]
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      #      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "6.0.x" # SDK Version to use.
          source-url: https://nuget.pkg.github.com/KingsleyOmon-Edo/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      # Build
      - run: dotnet build --configuration Release src/KObjectMapper/KObjectMapper.csproj

      # Package
      - name: Creating KObject Mapper Nuget package ...
        run: dotnet pack -c Release src/KObjectMapper/KObjectMapper.csproj

      # Publish to (GPR)
      - name: Publishing the KObjectMapper package to GitHub Packages Registry (GPR) ...
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.___G_AE1E3E2FBABB49A5965C71FBA6818F08 }}
        run: dotnet nuget push src/KObjectMapper/bin/Release/*.nupkg --api-key $NUGET_AUTH_TOKEN

      # Publish (nuget.org)
      - name: Publish the package to nuget.org
        env:
          NUGET_AUTH_TOKEN: ${{ secrets._N_88C9270CE70442E8AF4905DEC356088A }}
        run: dotnet nuget push src/KObjectMapper/bin/Release/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
